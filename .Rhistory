setwd("C:/github/metamix/vignettes")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(metamix)
library(RoBMA)
data("mertens_nudge")
hist(mertens_nudge$cohens_d)
hist(mertens_nudge$cohens_d, breaks = 100)
hist(mertens_nudge$cohens_d, breaks = 100)
mertens_nudge <- subset(mertens_nudge, cohens_d < 1.5)
hist(mertens_nudge$cohens_d, breaks = 100)
mertens_nudge <- subset(mertens_nudge, cohens_d < 1.5)
hist(mertens_nudge$cohens_d, breaks = 100)
#fit models with one-sided selection
fit1_metamix_pb <- sel_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d), M = 1, steps = c(0.5, 0.975), chains = 4, cores = 4)
fit2_metamix_pb <- sel_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d), M = 2, steps = c(0.5, 0.975), chains = 4, cores = 4)
fit3_metamix_pb <- sel_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d), M = 3, steps = c(0.5, 0.975), chains = 4, cores = 4)
ml1_pb = bridge_sampler(fit1_metamix_pb)
library(bridgesampling)
library(bridgesampling)
ml1_pb = bridge_sampler(fit1_metamix_pb)
library(bridgesampling)
ml1_pb = bridge_sampler(fit1_metamix_pb)
ml2_pb = bridge_sampler(fit2_metamix_pb)
ml3_pb = bridge_sampler(fit3_metamix_pb)
# Save all
save(fit1_metamix_pb, fit2_metamix_pb, fit3_metamix_pb,
ml1_pb, ml2_pb, ml3_pb,
file = "metamix_pb_onesided.RData")
fit1_metamix_pb
fit3_metamix_pb
# Fit models
fit1_metamix <- re_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d),
M = 1, chains = 4, cores = 4)
fit2_metamix <- re_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d),
M = 2, chains = 4, cores = 4)
fit3_metamix <- re_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d),
M = 3, chains = 4, cores = 4)
# Compute marginal likelihoods
ml1_nobias <- bridge_sampler(fit1_metamix)
ml2_nobias <- bridge_sampler(fit2_metamix)
ml3_nobias <- bridge_sampler(fit3_metamix)
# Save all
save(fit1_metamix, fit2_metamix, fit3_metamix,
ml1_nobias, ml2_nobias, ml3_nobias,
file = "metamix_nobias.RData")
# Combine all log marginal likelihoods into a named vector
logml_all <- c(
pb_M1      = ml1_pb$logml,
pb_M2      = ml2_pb$logml,
pb_M3      = ml3_pb$logml,
nobias_M1  = ml1_nobias$logml,
nobias_M2  = ml2_nobias$logml,
nobias_M3  = ml3_nobias$logml
)
# Stabilize using log-sum-exp trick
logml_centered <- logml_all - max(logml_all)
unnormalized <- exp(logml_centered)
posterior_probs <- unnormalized / sum(unnormalized)
# Output posterior probabilities
posterior_probs
fit4_metamix_pb <- sel_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d), M = 4, steps = c(0.5, 0.975), chains = 4, cores = 4)
fit4_metamix <- re_mix(y = mertens_nudge$cohens_d, sd = sqrt(mertens_nudge$variance_d),
M = 4, chains = 4, cores = 4)
ml4_pb <- bridge_sampler(fit4_metamix_pb)
ml4_nobias <- bridge_sampler(fit4_metamix)
save(fit4_metamix, fit4_metamix_pb, ml4_pb, ml4_nobias,
file = "4mix.RData")
# Combine all log marginal likelihoods into a named vector
logml_all <- c(
pb_M1      = ml1_pb$logml,
pb_M2      = ml2_pb$logml,
pb_M3      = ml3_pb$logml,
pb_M4      = ml4_pb$logml,
nobias_M1  = ml1_nobias$logml,
nobias_M2  = ml2_nobias$logml,
nobias_M3  = ml3_nobias$logml,
nobias_M4  = ml4_nobias$logml
)
# Stabilize using log-sum-exp trick
logml_centered <- logml_all - max(logml_all)
unnormalized <- exp(logml_centered)
posterior_probs <- unnormalized / sum(unnormalized)
# Output posterior probabilities
posterior_probs
rstan::summary(fit3_metamix_pb, pars = c("mu", "tau", "omega"))$summary[ , c("mean", "2.5%", "97.5%")]
rstan::summary(fit4_metamix_pb, pars = c("mu", "tau", "omega"))$summary[ , c("mean", "2.5%", "97.5%")]
fit3_metamix_pb
rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
hist(probs)
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
hist(probs, breaks = 100)
fit3_metamix_pb
probs
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
hist(probs, breaks = 100)
rstan::summary(fit3_metamix_pb, pars = c("mu", "tau", "omega"))$summary[ , c("mean", "2.5%", "97.5%")]
rstan::summary(fit3_metamix_pb, pars = c("mu", "tau", "omega", "theta"))$summary[ , c("mean", "2.5%", "97.5%")]
rstan::summary(fit4_metamix_pb, pars = c("mu", "tau", "omega"))$summary[ , c("mean", "2.5%", "97.5%")]
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
hist(probs, breaks = 100)
probs
probs <- rstan::summary(fit3_metamix_pb, pars = c("posterior_probs"))$summary[ , c("mean")]
hist(probs, breaks = 100)
(probs > .5)/length(probs)
sum((probs > .5))/length(probs)
